@page "/counter"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@inject ILogger<ReservaModelo> Logger
@inject IJSRuntime js

<PageTitle>Reservas</PageTitle>

<div class="container mt-4">
	<h1 class="text-center mb-4">Gestión de Reservas</h1>

	<!-- Botón para abrir el modal de nueva reserva -->
	<div class="d-flex justify-content-end mb-3">
		<button class="btn btn-outline-dark" @onclick="btnRegistrar">
			@if (MostrarRegistrar)
			{
				<i class="bi bi-x"></i>

			}
			else
			{
				<i class="bi bi-plus-circle me-2 p-1">Nueva Reserva</i>

			}
		</button>
	</div>
	@if (!MostrarRegistrar)
	{
		<div class="table-responsive">
			<table class="table table-bordered table-striped table-hover align-middle">
				<thead class="table-dark">
					<tr>
						<th scope="col">Empleado</th>
						<th scope="col">Horario</th>
						<th scope="col">Servicio</th>
						<th scope="col">Cliente</th>
						<th scope="col" class="text-center">Acciones</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var empleado in Empleados)
					{
						foreach (var reserva in empleado.Reservas)
						{
							<tr>
								<td>@empleado.Nombre</td>
								<td>@reserva.FechaHoraInicio.ToString("g")</td>
								<td>@reserva.TipoServicio</td>
								<td>@reserva.NombreCliente</td>
								<td class="text-center">
									<button class="btn btn-warning btn-sm mx-2" data-bs-toggle="modal" data-bs-target="#editReservationModal" onclick="editReservation(@reserva, @empleado.Id)" title="Modificar">
										<i class="bi bi-pencil"></i>
									</button>
									<button class="btn btn-danger btn-sm" onclick="deleteReservation(@reserva, @empleado.Id)" title="Eliminar">
										<i class="bi bi-trash"></i>
									</button>
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
	}
</div>

@if (MostrarRegistrar)
{
	<EditForm Model="NuevaReserva" OnValidSubmit="AgregarReserva">
		<DataAnnotationsValidator />
		<div class="mb-3">
			<label for="empleado" class="form-label">Empleado</label>
			<InputSelect @bind-Value="EmpleadoSeleccionadoId" class="form-select">
				<option value="0">Seleccione un empleado</option>
				@foreach (var empleado in Empleados)
				{
					<option value="@empleado.Id">@empleado.Nombre</option>
				}
			</InputSelect>
		</div>
		<div class="mb-3">
			<label for="tipoServicio" class="form-label">Tipo de Servicio</label>
			<InputText @bind-Value="NuevaReserva.TipoServicio" class="form-control" placeholder="Ejemplo: Lavado Exterior" />
		</div>
		<div class="mb-3">
			<label for="fechaHoraInicio" class="form-label">Hora de Inicio</label>
			<InputDate @bind-Value="NuevaReserva.FechaHoraInicio" class="form-control" />
		</div>
		<div class="mb-3">
			<label for="fechaHoraFin" class="form-label">Hora de Finalización Estimada</label>
			<InputDate @bind-Value="NuevaReserva.FechaHoraFin" class="form-control" />
		</div>
		<div class="mb-3">
			<label for="nombreCliente" class="form-label">Nombre del Cliente</label>
			<InputText @bind-Value="NuevaReserva.NombreCliente" class="form-control" placeholder="Ejemplo: Juan Pérez" />
		</div>
		<div class="mb-3">
			<label for="telefonoCliente" class="form-label">Teléfono del Cliente</label>
			<InputText @bind-Value="NuevaReserva.TelefonoCliente" class="form-control" placeholder="Ejemplo: 123-456-7890" />
		</div>
		<div class="mb-3">
			<label for="detalles" class="form-label">Detalles Adicionales</label>
			<InputText @bind-Value="NuevaReserva.Detalles" class="form-control" placeholder="Ejemplo: Con aspirado" />
		</div>
		<button type="submit" class="btn btn-success w-100">Guardar Reserva</button>
	</EditForm>
}


@code {
	private List<Empleado> Empleados { get; set; } = new List<Empleado>
	{
		new Empleado { Id = 1, Nombre = "Carlos López", Reservas = new List<ReservaModelo> {
			new ReservaModelo { FechaHoraInicio = DateTime.Now.AddHours(2), FechaHoraFin = DateTime.Now.AddHours(3), TipoServicio = "Lavado Exterior", NombreCliente = "Ana Torres", TelefonoCliente = "123-456-7890", Detalles = "Con aspirado" }
		}},

		new Empleado { Id = 2, Nombre = "María González", Reservas = new List<ReservaModelo>
		{
			new ReservaModelo { FechaHoraInicio = DateTime.Now.AddHours(3), FechaHoraFin = DateTime.Now.AddHours(4), TipoServicio = "Limpieza Interior", NombreCliente = "Pedro Ramírez", TelefonoCliente = "098-765-4321", Detalles = "Con limpieza de tapicería" }
		}},

		new Empleado { Id = 3, Nombre = "Luis Fernández", Reservas = new List<ReservaModelo>() }
	};

	private ReservaModelo NuevaReserva { get; set; } = new();
	private int EmpleadoSeleccionadoId { get; set; } = 0;
	private bool MostrarRegistrar { get; set; }

	private void selectEmployee(int empleadoId)
	{
		EmpleadoSeleccionadoId = empleadoId;
		NuevaReserva = new ReservaModelo(); // Resetear el formulario para una nueva reserva
	}

	private void AgregarReserva()
	{
		var empleado = Empleados.FirstOrDefault(e => e.Id == EmpleadoSeleccionadoId);
		if (empleado == null)
		{
			Logger.LogError($"Empleado con ID {EmpleadoSeleccionadoId} no encontrado.");
			return;
		}

		// Verificar si ya existe una reserva en el mismo horario
		if (empleado.Reservas.Any(r => r.FechaHoraInicio == NuevaReserva.FechaHoraInicio))
		{
			Logger.LogWarning("Conflicto detectado en la reserva.");
			return;
		}

		// Agregar nueva reserva
		empleado.Reservas.Add(new ReservaModelo
			{
				FechaHoraInicio = NuevaReserva.FechaHoraInicio,
				FechaHoraFin = NuevaReserva.FechaHoraFin,
				TipoServicio = NuevaReserva.TipoServicio,
				NombreCliente = NuevaReserva.NombreCliente,
				TelefonoCliente = NuevaReserva.TelefonoCliente,
				Detalles = NuevaReserva.Detalles
			});
	}

	private void editReservation(ReservaModelo reserva, int empleadoId)
	{
		// Lógica para editar una reserva
	}

	private void deleteReservation(ReservaModelo reserva, int empleadoId)
	{
		var empleado = Empleados.FirstOrDefault(e => e.Id == empleadoId);
		if (empleado != null)
		{
			empleado.Reservas.Remove(reserva);
		}
	}



	private async void btnRegistrar()
	{
		MostrarRegistrar = !MostrarRegistrar;
	}

	private class Empleado
	{
		public int Id { get; set; }
		public string Nombre { get; set; } = string.Empty;
		public List<ReservaModelo> Reservas { get; set; } = new();
	}

	private class ReservaModelo
	{
		[Required]
		public DateTime FechaHoraInicio { get; set; }

		[Required]
		public DateTime FechaHoraFin { get; set; }

		[Required]
		[StringLength(50)]
		public string TipoServicio { get; set; } = string.Empty;

		[Required]
		[StringLength(100)]
		public string NombreCliente { get; set; } = string.Empty;

		[Required]
		[StringLength(20)]
		public string TelefonoCliente { get; set; } = string.Empty;

		public string? Detalles { get; set; }
	}
}
